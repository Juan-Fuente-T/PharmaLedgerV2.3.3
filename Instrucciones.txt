URL del CURSO:
https://coding-bootcamps.com/curso-de-hyperledger-fabric-smart-contract/

Ejecutar desde terminal:
- ./loadFabric.sh --para descargar y crean las imagenes docker(ejecutar fuera del proyecto)
- ./net-pln.sh up --ejecuta todos los comandos necesarios para levantar el servicio,
creando los contenedores (para ambos casos en necesario Docker en marcha)

Para dar permisos si es necesario. chmod +x net-pln.sh

Para monitorizar los logs ejecutamos: ./net-pln.sh monitor-up
- ./net-pln.sh createChannel  crea el canal
- ./net-pln.sh deploySmartContract.sh  despliega el smart contract/chaincode

---Aqui estan los repositorios importantes---
Hyperledger Fabric Releases: https://github.com/hyperledger/fabric/releases
Hyperledger Fabric CA Releases: https://github.com/hyperledger/fabric-ca/releases
Hyperledger Fabric GitHub: https://github.com/hyperledger/fabric
Docker Hub (Hyperledger): https://hub.docker.com/u/hyperledger

Borra y limpia el entorno:
docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q) 2>/dev/null
docker volume prune --all -f BORRA TODOS LOS VOLUMENES EN DOCKER
docker network prune -f
sudo rm -rf organizations/peerOrganizations
sudo rm -rf organizations/ordererOrganizations
sudo docker rmi $(sudo docker images -q) BORRA TODAS LAS IMAGENES EN DOCKER

echo $CORE_PEER_LOCALMSPID  Para saber en que peer estas

---EL script que me paso Jaime está en reload.sh y está comprobado que funciona bien
Esto muestra los logs del explorer:
docker logs hyperledger-explorer -f

sudo rm -rf organizations/peerOrganizations/org1.example.com/msp/keystore
sudo rm -rf organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/keystore


docker run --rm -ti --name=ctop --volume=/var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop
chsh -s /bin/bash

peer lifecycle chaincode package registroAlumnos.tar.gz --path ./chaincodes/registroAlumnos/chaincode-javascript/ --lang node --label registroAlumnos_1.0



# Elimina todo completamente
docker-compose -f docker-compose-pln-net.yaml down -v
# 2. Elimina los volúmenes corruptos
docker volume prune -f
   sudo rm -rf ../walletstore/*
sudo rm -rf ../walletstore   
# 3. Reconstruye con permisos
mkdir -p ../walletstore
chmod -R 777 ../walletstore
   sudo chown -R $USER:$USER ../walletstore
docker-compose -f docker-compose-pln-net.yaml up -d


docker-compose -f docker-compose-pln-net.yaml down -v
docker-compose -f docker-compose-pln-net.yaml up -d
docker logs hyperledger-explorer

# Baja todo
./net-pln.sh down
# Limpia contenedores/redes/volúmenes anónimos
docker stop $(docker ps -a -q) 2>/dev/null
docker rm $(docker ps -a -q) 2>/dev/null
docker network prune -f
docker volume prune -f
# Limpia volúmenes nombrados de Explorer (¡ASEGÚRATE DE LOS NOMBRES!)
docker volume rm explorer-wallet net_explorerdb_data # O como se llamen
# Limpia artefactos locales
sudo rm -rf organizations/peerOrganizations organizations/ordererOrganizations channel-artifacts wallet system-genesis-block


docker cp hyperledger-explorer:/opt/explorer/app/platform/fabric/config.json ./explorer-config.json
nano explorer-config.json

- ELIMINAR DE LA GUI DE GIT LOS Zone.Identifier
Get-ChildItem -Recurse | Unblock-File
- Comprobar que no quede nada, si no sale nada esta limpio:
dir -r | Where-Object { $_.Name -like "*:Zone.Identifier" }

LLAMAR A LAS FUNCIONES
export PATH=/home/juan/PROGRAMACION/Hyperledger/pharma/bin:$PATH
export FABRIC_CFG_PATH=${PWD}/configtx
-Verifica (opcional)
ls $FABRIC_CFG_PATH/core.yaml
echo $FABRIC_CFG_PATH
./net-pln.sh invoke query 2000.001

jq -Rs '.' ruta/al/certificado/tlsca.pem

Editar variable entorno (importante)
nano ~/.bashrc
control o para guardar
enter para sobreescribir el archivo
control x para salir

docker network rm net_pln
docker system prune -a --volumes